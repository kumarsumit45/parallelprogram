 Question 5: Compute Value of PI using Parallel Algorithm


#include <mpi.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <math.h>
 #include <time.h>
 int main(int argc, char** argv) {
    MPI_Init(&argc, &argv);
    
    int rank, size;
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    
    const int TOTAL_POINTS = 10000000; // Total number of points
    int local_points = TOTAL_POINTS / size;
    int local_count = 0;
    
    // Seed random number generator differently for each process
    srand(time(NULL) + rank);
    
    // Generate random points and count those inside unit circle
    for (int i = 0; i < local_points; i++) {
        double x = ((double)rand() / RAND_MAX) * 2.0 - 1.0; // Random x in [-1,1]
        double y = ((double)rand() / RAND_MAX) * 2.0 - 1.0; // Random y in [-1,1]
        
        if (x * x + y * y <= 1.0) { // Check if point is inside unit circle
            local_count++;
        }
    }
    
    // Reduce all local counts to get total count
    int total_count;
    MPI_Reduce(&local_count, &total_count, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);
    
    // Root process calculates PI estimate
    if (rank == 0) {
        double pi_estimate = 4.0 * (double)total_count / (double)TOTAL_POINTS;
        printf("Estimated value of PI: %.6f\n", pi_estimate);
        printf("Actual value of PI: %.6f\n", M_PI);
        
    }
    
    MPI_Finalize();
    return 0;
 }
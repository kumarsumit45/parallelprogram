Question 3: Find Largest Element IN ARRAY using Broadcast and Reduction


#include <mpi.h>
 #include <stdio.h>
 #include <stdlib.h>
 int main(int argc, char** argv) {
    MPI_Init(&argc, &argv);
    
    int rank, size;
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    
    const int N = 10; // Array size
    int *array = (int*)malloc(N * sizeof(int));
    
    // Root process initializes the array
    if (rank == 0) {
        for (int i = 0; i < N; i++) {
            array[i] =rand() % 1000; // Random values 0-999
        }
        printf("Array elements :\n");
        for(int i=0;i<N;i++){
            printf("%d \t",array[i]);
        }
    }
    
    // Broadcast entire array to all processes
    MPI_Bcast(array, N, MPI_INT, 0, MPI_COMM_WORLD);
    
    // Each process works on its portion of indices
    int chunk_size = N / size;
    int start_idx = rank * chunk_size;
    int end_idx = (rank == size - 1) ? N : start_idx + chunk_size;
    
    // Find maximum element in assigned range
    int local_max = array[start_idx];
    for (int i = start_idx + 1; i < end_idx; i++) {
        if (array[i] > local_max) {
            local_max = array[i];
        }
    }
    
    // Reduce to find global maximum
    int global_max;
    MPI_Reduce(&local_max, &global_max, 1, MPI_INT, MPI_MAX, 0, MPI_COMM_WORLD);
    
    // Root process prints the result
    if (rank == 0) {
        printf("\nLargest element in array: %d\n", global_max);
    }
    
    free(array);
MPI_Finalize();
 return 0;
 }